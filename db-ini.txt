/**
*   Домены для проверки телефонного номера и электронной почты
**/
CREATE DOMAIN phone AS TEXT
CHECK( VALUE ~ '^[0-9]{11}$');

CREATE DOMAIN email AS TEXT
CHECK ( value ~ '^[a-zA-Z0-9.!#$%&''*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$' );

/**
*   Функция для генерации случайной строки с числами и буквами длиной N символов
**/

CREATE EXTENSION pgcrypto;

CREATE OR REPLACE FUNCTION generate_uid(size INT) RETURNS TEXT AS $$
DECLARE
  characters TEXT := 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
  bytes BYTEA := gen_random_bytes(size);
  l INT := length(characters);
  i INT := 0;
  output TEXT := '';
BEGIN
  WHILE i < size LOOP
    output := output || substr(characters, get_byte(bytes, i) % l + 1, 1);
    i := i + 1;
  END LOOP;
  RETURN output;
END;
$$ LANGUAGE plpgsql VOLATILE;

/**
*   Создание Таблиц
**/

CREATE TABLE event_place (
	event_place_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, 
	event_place_name varchar(100) NOT NULL
);

CREATE TABLE event_level (
	event_level_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	event_level_name varchar(100) NOT NULL
);

CREATE TABLE event_type (
	event_type_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	event_type_name varchar(100) NOT NULL
);

CREATE TABLE users (
	user_id TEXT PRIMARY KEY DEFAULT ('user_' || generate_uid(10)),
	user_name varchar(100) NOT NULL,
	user_descr varchar(200) NOT NULL,
	user_login text NOT NULL,
	user_password text NOT NULL,
	user_phone phone NULL,
	user_email email NULL
);

CREATE TABLE events (
	event_id TEXT PRIMARY KEY DEFAULT ('event_' || generate_uid(10)),
	event_name varchar(200) NOT NULL,
	event_descr varchar(1000) NOT NULL,
	event_type integer REFERENCES event_type (event_type_id),
	event_level integer REFERENCES event_level (event_level_id),
	event_place integer REFERENCES event_place (event_place_id),
	event_date date NOT NULL,
	event_vacancies integer NOT NULL,
	organisator varchar(200) NOT NULL
);

CREATE TABLE user_event (
	user_event_id text PRIMARY KEY DEFAULT generate_uid(10),
	user_id text REFERENCES users (user_id),
	event_id text REFERENCES events (event_id)
);
/**
*   Заполнение
**/
INSERT INTO users (user_name, user_descr, user_login, user_password, user_phone, user_email)
VALUES
('Ярик', 'Студент Апити', 'yarik123', '36b783b2', '79172607998', 'potyomich@mail.ru'),
('Биробиджон', 'Студент Апити', 'yarik123', 'sobaka337', '79172607998', 'privet@mail.ru'),
('Абвгдеев', 'Работник ЦРБ', 'doc434', '31dg546', '79863504332', 'abvgdeev@mail.ru'),
('Серкан', 'Продавец шавермы', 'serkanBotat', '2178xdh61eh6', '73685467891', 'bogdad@mail.ru'),
('Бибиб', 'Суетолог', 'vedraTop235', '38djdqw78q', '79362443111', 'bibip@mail.ru');

INSERT INTO event_place (event_place_name) 
VALUES
('ГАПОУ Альметьевский политехнический техникум'),
('Кванториум'),
('Молодёжный центр');

INSERT INTO event_type (event_type_name) 
VALUES
('Игра'),
('Квест'),
('Форум'),
('Мастер-класс');

INSERT INTO event_level (event_level_name)
VALUES
('Организация'),
('Муниципальный'),
('Региональный'),
('Федеральный');













